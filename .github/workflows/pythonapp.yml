name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        special: ['']
        include:
          - os: ubuntu-latest
            special: 'pre-release'
            version: '3.10'
          - os: ubuntu-latest
            special: 'no optional'
            version: '3.10'
          - os: ubuntu-latest
            special: 'CP2K 6.1'
            version: '3.10'
          - os: ubuntu-latest
            special: 'CP2K 7.1'
            version: '3.10'
          - os: ubuntu-latest
            special: 'CP2K 8.2'
            version: '3.10'
          - os: ubuntu-latest
            special: 'CP2K 9.1'
            version: '3.10'
    env:
      CP2K_DATA_DIR: "/home/runner/work/qmflows/qmflows/cp2k/data"

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - uses: actions/checkout@v2

    - name: Install cp2k
      if: matrix.os == 'ubuntu-latest'
      run: |
        case "${{ matrix.special }}" in
          "CP2K"*)
            VERSION_SHORT=$(echo "${{ matrix.special }}" | grep -P -o "CP2K \K([\.0-9]+)")
            VERSION=v"$VERSION_SHORT".0

            git clone https://github.com/cp2k/cp2k -q
            cd cp2k
            git -c advice.detachedHead=false checkout tags/$VERSION

            wget -nv https://github.com/cp2k/cp2k/releases/download/$VERSION/cp2k-$VERSION_SHORT-Linux-x86_64.ssmp -O cp2k.ssmp
            chmod u+rx cp2k.ssmp
            mv cp2k.ssmp /usr/local/bin/cp2k.popt
            ;;
          *)
            sudo apt install cp2k ;;
         esac

    - name: Info CP2K
      if: matrix.os == 'ubuntu-latest'
      run: cp2k.popt --version

    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        conda-channels: anaconda, conda-forge

    - name: Install dependencies
      shell: bash
      run: |
        case "${{ matrix.special }}" in
          "pre-release")
            conda create -n test -c conda-forge python=${{ matrix.version }} nbsphinx jupyter pandoc
            source $CONDA/bin/activate test
            pip install rdkit-pypi
            pip install --pre -e .[test] --upgrade --force-reinstall
            pip install git+https://github.com/SCM-NV/PLAMS@master --upgrade
            pip install git+https://github.com/NLeSC/noodles@master --upgrade
            ;;
          "no optional")
            conda create -n test -c conda-forge python=${{ matrix.version }}
            source $CONDA/bin/activate test
            pip install -e .[test_no_optional]
            ;;
          *)
            conda create -n test -c conda-forge python=${{ matrix.version }} nbsphinx jupyter pandoc
            source $CONDA/bin/activate test
            pip install rdkit-pypi
            pip install -e .[test]
            ;;
        esac

    - name: Conda info
      run: |
        source $CONDA/bin/activate test
        conda info

    - name: Conda list
      run: conda list -n test

    - name: Test with pytest
      shell: bash
      run: |
        source $CONDA/bin/activate test
        case "${{ matrix.special }}" in
          "no optional")
            pytest -m 'not (slow or long)' test ;;
          "CP2K"*)
            pytest -m '(slow or long)' ;;
          *)
            pytest -m 'not (slow or long)' ;;
        esac

    - uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        name: codecov-umbrella

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10 on ubuntu-latest
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install linters
        run: pip install pydocstyle pycodestyle mypy "numpy>=1.21" pytest more_itertools types-PyYAML types-setuptools

      - name: Python info
        run: |
          which python
          python --version

      - name: Installed packages
        run: pip list

      - name: Run pycodestyle
        run: pycodestyle src test

      - name: Run pydocstyle
        run: pydocstyle src

      - name: Run mypy
        run: mypy src
        continue-on-error: true
